[sources.coredns_logs]
  type = "docker_logs"
  include_labels = ["vector.collect.logs"]

[transforms.reformat_logs]
  type = "remap"
  inputs = ["coredns_logs"]
  source = '''
    pattern = "^\\[INFO\\]\\s+%{IPORHOST:client_ip}:%{POSINT:client_port}\\s+-\\s+%{INT:query_id}\\s+\\\"%{WORD:query_type}\\s+IN\\s+%{NOTSPACE:domain}\\s+%{WORD:protocol}\\s+.*$"

    should_keep = false

    original_message = .message
    original_timestamp = .timestamp

    if exists(.message) && is_string(.message) {
      _, err = parse_grok(string!(.message), pattern)

      if err == null {
        should_keep = true
      }
    }

    if should_keep {
      . = {
        "message": original_message,
        "timestamp": original_timestamp
      }
    } else {
      . = null
    }
  '''

[sinks.nats_output]
  type = "nats"
  inputs = ["reformat_logs"]

  url = "${NATS_URL}"
  subject = "${NATS_LOG_SUBJECT}"

  [sinks.nats_output.encoding]
    codec = "json"

  jetstream.enabled = true
